[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "SPS 502 | Data Science",
    "section": "",
    "text": "Instructor\n\n   Dr. Chris Birdsall\n   Environmental Research Building 1149\n   chrisbirdsall@boisestate.edu\n\n\n\nCourse details\n\n   Thursdays\n   August 25–December 15, 2022\n   6:00-8:45 p.m.\n   Bronco Gymnasium 218\n   Slack\n\n\n\nContacting me\nE-mail and the course Slack group are the best ways to get in contact with me. I will try to respond to all messages within 24 hours"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "1 + 1\n\n[1] 2"
  },
  {
    "objectID": "labs/Lab01.html",
    "href": "labs/Lab01.html",
    "title": "SPS 502 | Data Science",
    "section": "",
    "text": "The main goal of this lab is to introduce you to R and RStudio, which we will be using throughout the course both to learn the statistical concepts discussed in the course and to analyze real data and come to informed conclusions.\nAn additional goal is to introduce you to git and GitHub, which is the collaboration and version control system that we will be using throughout the course. Github is extremely helpful for tracking down problems with your code and for managing collaboration, which we’ll do in some labs later in the semester.\nAs the labs progress, you are encouraged to explore beyond what the labs dictate; a willingness to experiment will make you a much better programmer. Before we get to that stage, however, you need to build some basic fluency in R. Today we begin with the fundamental building blocks of R and RStudio: the interface, reading in data, and basic commands."
  },
  {
    "objectID": "labs/Lab01.html#project-name",
    "href": "labs/Lab01.html#project-name",
    "title": "SPS 502 | Data Science",
    "section": "Project name:",
    "text": "Project name:\nCurrently your project is called Untitled Project. Update the name of your project to be “Lab 01 - Hello R”.\n\n\n\n\n\n\nThe top portion of your R Markdown file (between the three dashed lines) is called YAML. It stands for \"YAML Ain't Markup Language\". It is a human friendly data serialization standard for all programming languages. All you need to know is that this area is called the YAML (we will refer to it as such) and that it contains meta information about your document."
  },
  {
    "objectID": "labs/Lab01.html#yaml",
    "href": "labs/Lab01.html#yaml",
    "title": "SPS 502 | Data Science",
    "section": "YAML:",
    "text": "YAML:\nOpen the R Markdown (Rmd) file in your project, change the author name to your name, and knit the document."
  },
  {
    "objectID": "labs/Lab01.html#commiting-changes",
    "href": "labs/Lab01.html#commiting-changes",
    "title": "SPS 502 | Data Science",
    "section": "Commiting changes:",
    "text": "Commiting changes:\nThen Go to the Git pane in your RStudio.\nIf you have made changes to your Rmd file, you should see it listed here. Click on it to select it in this list and then click on Diff. This shows you the difference between the last committed state of the document and its current state that includes your changes. If you’re happy with these changes, write “Update author name” in the Commit message box and hit Commit.\n\n\n\n\n\nYou don’t have to commit after every change, this would get quite cumbersome. You should consider committing states that are meaningful to you for inspection, comparison, or restoration. In the first few assignments we will tell you exactly when to commit and in some cases, what commit message to use. As the semester progresses we will let you make these decisions."
  },
  {
    "objectID": "labs/Lab01.html#pushing-changes",
    "href": "labs/Lab01.html#pushing-changes",
    "title": "SPS 502 | Data Science",
    "section": "Pushing changes:",
    "text": "Pushing changes:\nNow that you have made an update and committed this change, it’s time to push these changes to the web! Or more specifically, to your repo on GitHub. Why? So that others can see your changes. And by others, we mean the course teaching team (your repos in this course are private to you and us, only).\nIn order to push your changes to GitHub, click on Push. This will prompt a dialogue box where you first need to enter your user name, and then your password. This might feel cumbersome. Bear with me… We will teach you how to save your password so you don’t have to enter it every time. But for this one assignment you’ll have to manually enter each time you push in order to gain some experience with it."
  },
  {
    "objectID": "labs/Lab01.html#thought-exercise",
    "href": "labs/Lab01.html#thought-exercise",
    "title": "SPS 502 | Data Science",
    "section": "Thought exercise:",
    "text": "Thought exercise:\nFor which of the above steps (changing project name, making updates to the document, committing, and pushing changes) do you need to have an internet connection? Discuss with your classmates."
  },
  {
    "objectID": "labs/Lab01.html#open-the-starter-project-in-rstudio-cloud",
    "href": "labs/Lab01.html#open-the-starter-project-in-rstudio-cloud",
    "title": "SPS 502 | Data Science",
    "section": "Open the starter project in RStudio Cloud",
    "text": "Open the starter project in RStudio Cloud\nVisit RStudio.cloud and login using the credentials you setup in our first class. Once you load up RStudio Cloud in your web browser you should see something like this:\n\nIn the left side bar you’ll see a header, “Space”, under which you’ll see “Your Workspace” and “SPS 502-F22”. Click SPS 502-F22 to view the list of projects associated with our class.\nThere you’ll see the Lab 01 starter project, called “Lab 01 - Hello R!”.\nClick “Start” to begin the lab"
  },
  {
    "objectID": "labs/Lab01.html#opening-the-starter-file",
    "href": "labs/Lab01.html#opening-the-starter-file",
    "title": "SPS 502 | Data Science",
    "section": "Opening the starter file",
    "text": "Opening the starter file\nWhen you want to write a paper, you have to open a Word document to type your ideas into, and save your work in. In R we use a document type called an R Markdown document. R Markdown documents are useful for both running code, and annotating the code with comments. The document can be saved, so you can refer back to your code later, and can be used to create other document types (html, word, pdf, or slides) for presenting the results of your analyses. R Markdown provides a way to generate clear and reproducible statistical analyses."
  },
  {
    "objectID": "labs/Lab01.html#editing-an-r-markdown-file",
    "href": "labs/Lab01.html#editing-an-r-markdown-file",
    "title": "SPS 502 | Data Science",
    "section": "Editing an R Markdown file",
    "text": "Editing an R Markdown file\nThe top portion of your R Markdown file (between the three dashed lines) is called YAML. It stands for “YAML Ain’t Markup Language”. It is a human friendly data serialization standard for all programming languages. All you need to know is that this area is called the YAML it contains meta information about your document, such as the title of the document, the author name, and the date.\nLet’s start by adding your first and last name in author field and adding the date. Be sure to keep the quotation marks."
  },
  {
    "objectID": "labs/Lab01.html#saving-a-file",
    "href": "labs/Lab01.html#saving-a-file",
    "title": "SPS 502 | Data Science",
    "section": "Saving a file",
    "text": "Saving a file\nYou will complete your lab work in an R Markdown file like this each week, so it is important to learn how to save these files. It’s generally good practice to periodically save your work as you go.\nClick File > Save\nOkay, let’s get to the fun part!"
  },
  {
    "objectID": "labs/Lab01.html#loading-packages",
    "href": "labs/Lab01.html#loading-packages",
    "title": "SPS 502 | Data Science",
    "section": "Loading Packages",
    "text": "Loading Packages\nIn this lab we will use the tidyverse and datasauRus packages. We can load them using the following (this code is already provided for you in your starter document):\n\nlibrary(tidyverse)\n\nlibrary(datasauRus)"
  },
  {
    "objectID": "labs/Lab01.html#data",
    "href": "labs/Lab01.html#data",
    "title": "SPS 502 | Data Science",
    "section": "Data",
    "text": "Data\nThe data frame we will be working with today is called datasaurus_dozen and it’s in the datasauRus package. Actually, this single data frame contains 13 datasets, designed to show us why data visualization is important and how summary statistics alone can be misleading. The different datasets are marked by the dataset variable.\nTo find out more about the dataset, type the following in your Console: ?datasaurus_dozen. A question mark before the name of an object will always bring up its help file. This command must be run in the Console.\n\nBased on the help file, how many rows and how many columns does the datasaurus_dozen file have? What are the variables included in the data frame? Add your responses to your lab report.\n\nLet’s take a closer look at these datasets by making a frequency table of the dataset variable. Add the following code block to your R Markdown document and run it (copy the code then paste it under your answer in exercise 1):\n\ndatasaurus_dozen %>%\ncount(dataset) %>%\nprint(13)\n\nYou should see a “tibble” pop up listing the names of the datasets in one column and the number of observations (n) in the next column."
  },
  {
    "objectID": "labs/Lab01.html#data-visualization-and-summary",
    "href": "labs/Lab01.html#data-visualization-and-summary",
    "title": "SPS 502 | Data Science",
    "section": "Data Visualization and Summary",
    "text": "Data Visualization and Summary\nOkay, we’re about to do a lot of stuff that won’t make a ton of sense yet. We’ll go through a brief explanation in this lab, but more details and context for these commands will come in the next couple of weeks. For now, buckle up!\n\nPlot y vs. x for the dino dataset. Then, calculate the correlation coefficient between x and y for this dataset. (Er… excuse me?)\n\nDon’t worry. All the code you need to accomplish this is already in your lab for you. You’ll just need to include the code and some other information in your R Markdown file.\nStart with the datasaurus_dozen and pipe it into the filter function to filter for observations where dataset == \"dino\". Store the resulting filtered data frame as a new data frame called dino_data.\n\ndino_data <- datasaurus_dozen %>%\n\nfilter(dataset == \"dino\")\n\nThere is a lot going on here, so let’s go through each part:\nFirst, the pipe operator: %>%, takes what comes before it and sends it as the first argument to what comes after it. So here, we’re saying filter the datasaurus_dozen data frame for observations where dataset == \"dino\".\nSecond, the assignment operator: <-, assigns the name dino_data to the filtered data frame and stores it as an object in your environment (take a look at the environment pane in the top left corner).\nNext, we need to visualize these data (yes, plural). We will use the ggplot function for this. The first argument specifies the data you’re visualizing. Next we define the aesthetic mappings (more on this next week). In other words, the columns of the data that get mapped to certain aesthetic features of the plot, e.g. the x axis will represent the variable called x and the y axis will represent the variable called y. Then, we add another layer to this plot where we define which geometric shapes we want to use to represent each observation in the data. In this case we want these to be points, hence geom_point.\n\nggplot(data = dino_data, mapping = aes(x = x, y = y)) +\n\ngeom_point()\n\nIf this seems like a lot, it is. And you will learn about the philosophy of building data visualizations in detail next week. For now, just stick with it and follow along with the code . Again, I do not expect this to make much sense yet.\nFor the second part of this exercise, we need to calculate a summary statistic: the correlation coefficient. Correlation coefficients, often referred to as \\(r\\) in statistics, measure the linear association between two variables. You will see that some of the pairs of variables we plot do not have a linear relationship between them. This is exactly why we want to visualize first: visualize to assess the form of the relationship, and calculate \\(r\\) only if relevant. In this case, calculating a correlation coefficient really doesn’t make sense since the relationship between x and y is definitely not linear…. it’s shaped like a dinosaur!\nBut, for illustrative purposes, let’s calculate the correlation coefficient between x and y anyway.\n\n\nStart with dino_data and calculate a summary statistic that we will call r as the correlation between x and y.\n\ndino_data %>%\n  summarize(r = cor(x, y))\n\n\nPlot y vs. x for the star dataset. You can (and should) reuse code we introduced above, just replace the dataset name with the desired dataset. Then, calculate the correlation coefficient between x and y for this dataset. How does this value compare to the r of dino?\nPlot y vs. x for the circle dataset. You can (and should) reuse code we introduced above, just replace the dataset name with the desired dataset. Then, calculate the correlation coefficient between x and y for this dataset. How does this value compare to the r of dino?\nFinally, let’s plot all datasets at once. In order to do this we will make use of facetting.\n\n\nggplot(datasaurus_dozen, aes(x = x, y = y, color = dataset))+\n  geom_point()+\n  facet_wrap(~ dataset, ncol = 3) +\n  theme(legend.position = \"none\")\n\n\n\nFacet by the dataset variable, placing the plots in a 3 column grid, and don’t add a legend.\nAnd we can use the group_by function to generate all the summary correlation coefficients.\n\ndatasaurus_dozen %>%\n  group_by(dataset) %>%\n  summarize(r = cor(x, y)) %>%\n  print(13)"
  },
  {
    "objectID": "labs/Lab01.html#knitting-an-html-file",
    "href": "labs/Lab01.html#knitting-an-html-file",
    "title": "SPS 502 | Data Science",
    "section": "Knitting an HTML file",
    "text": "Knitting an HTML file\nClick the Knit button at the top left side of the screen to “knit” the file, or in other words, produce an output document. An .html file will be generated.\nNote: If you see the popup below you can just hit cancel:\n\nThen click on the html file in the “Files” pane to open it in your web browser:"
  },
  {
    "objectID": "labs/Lab01.html#finishing-touches",
    "href": "labs/Lab01.html#finishing-touches",
    "title": "SPS 502 | Data Science",
    "section": "Finishing touches",
    "text": "Finishing touches\nAlmost done, but I’d like you to do two more things:\n\nResize your figures:\n\nClick on the gear icon in on top of the R Markdown document, and select “Output Options…” in the dropdown menu. In the pop up dialogue box go to the Figures tab and change the height and width of the figures, and hit OK when done. Then, knit your document and see how you like the new sizes. Change and knit again and again until you’re happy with the figure sizes. Note that these values get saved in the YAML.\n\nYou can also use different figure sizes for different figures. To do so click on the gear icon within the chunk where you want to make a change. Changing the figure sizes added new options to these chunks: fig.width and fig.height. You can change them by defining different values directly in your R Markdown document as well.\n\n\nChange the look of your report:\n\nOnce again click on the gear icon in on top of the R Markdown document, and select “Output Options…” in the dropdown menu. In the General tab of the pop up dialogue box try out different Syntax highlighting and theme options. Hit OK and knit your document to see how it looks. Play around with these until you’re happy with the look."
  },
  {
    "objectID": "labs/Lab01.html#submission",
    "href": "labs/Lab01.html#submission",
    "title": "SPS 502 | Data Science",
    "section": "Submission",
    "text": "Submission\nFinally, you need to save your html file and submit it to me on Canvas. Here’s how to do it (see image below for reference):\n\n\nFirst, click the checkbox next to the html file in your files pane.\nNext, click “More” and select “Export”\nSave the html file somewhere on your computer where you can find it (e.g., downloads folder, documents folder, desktop, or a folder you created for the class).\nGo to our class page on canvas and click on “assignments”. Navigate to “Lab 01” under “Labs” and submit just as you would a paper in any other class.\n\nAnd you’re done!"
  }
]