---
title: "Data Visualization II"
subtitle: "SPS 502"
format: 
  revealjs:
    theme: [simple]
    code-overflow: wrap
    height: 900
    width: 1600
---


# Data Visualization Review

## Grammar of Graphics

- A grammar of graphics is a tool that enables us to concisely describe the components of a graphic
- A statistical graphic is a `mapping` of `data` variables to `aes`thetic attributes of `geom`etric objects.
# ggplot Review

## Anatomy of a ggplot
- `ggplot()` is the main function in ggplot2

- Plots are constructed in layers

- Structure of the code for plots can be summarized as

```{r eval = FALSE}

ggplot(data = [dataset],

mapping = aes(x = [x-variable], y = [y-variable])) +

geom_xxx() +

other options

```

- For help with ggplot2, see [ggplot2.tidyverse.org](http://ggplot2.tidyverse.org/)

# Application: County Demographics and Voting Data

```{r packages, echo=FALSE, message=FALSE, warning=FALSE}
library(tidyverse)
library(tidycensus)
census_api_key("73889d62141017dde93defc72c78ed83b64b253b")
library(dataverse)
```




```{r message=FALSE, warning=FALSE, include=FALSE}
id_wide <- get_acs(
  geography = "county",
  state = "Idaho",
  variables = c(median_income = "B19013_001",
                median_age = "B01002_001",
                total_population = "B01003_001",
                pct_college = "DP02_0068P",
                median_value = "B25077_001"),
  output = "wide",
  year = 2020
)
```


```{r}
idaho_voting_long <- read_csv("data/idaho_voting_2020.csv")
```



```{r}
idaho_voting_wide <- idaho_voting_long %>% 
  pivot_wider(
    id_cols = c(county_name, county_fips, totalvotes),
    names_from = party,
    values_from = candidatevotes
  ) %>% 
    rename("democrat_votes" = DEMOCRAT, 
           "republican_votes" = REPUBLICAN, 
           "libertarian_votes" = LIBERTARIAN,
           "other_votes" = OTHER) %>% 
  mutate(across(ends_with('_votes'), ~ ./totalvotes * 100, .names = 'pct_{col}')) %>% 
  mutate(win_candidate = ifelse(pct_republican_votes > pct_democrat_votes, "Trump",
                                ifelse(pct_democrat_votes > pct_republican_votes, "Biden", NA)))

#note: NA is at the end because ifelse needs to know what to do if neither condition is true
  
```

```{r}
idaho_county_merged <- id_wide %>% 
  rename("county_fips" = GEOID) %>% 
  mutate(county_fips = as.integer(county_fips)) %>% 
  left_join(idaho_voting_wide, by = "county_fips")
```



## Data: Idaho County Demographics and 2020 Voting
Data on 2020 Presidential election results, income, age, education, total population, and median home value.

```{r, echo=TRUE}
glimpse(idaho_county_merged)
```

## Income and Education Visualization

```{r'}
ggplot(data = idaho_county_merged, 
       mapping = aes(x = pct_collegeE, y = median_incomeE,
                     color = win_candidate)) +
  geom_point() +
  labs(title = "Education and Median Income",
       subtitle = "Linear relationship between education and income",
       x = "Pct Adults w/ Bachelor's Degree or Higher", y = "Median Income",
       color = "Winning Pres. Candidate (2020)",
       caption = "Source:Education and income data from U.S. Census Bureau. \n Voting data from the Harvard Dataverse") +
  
```


## Coding Out Loud 


**Start with the `idaho_county_merged` data frame**


```{r}
#| echo: fenced
#| output-location: column
#| code-line-numbers: "|4"
ggplot(data = idaho_county_merged)
```


## Coding Out Loud 


Start with the `idaho_county_merged` data frame, **map college attainment to the x-axis**

```{r}
#| echo: fenced
#| output-location: column
#| code-line-numbers: "|5"
ggplot(data = idaho_county_merged,
       mapping = aes(x = pct_collegeE))
```



## Coding Out Loud 


Start with the `idaho_county_merged` data frame, map college attainment to the x-axis and **map median income to the y-axis**


```{r}
#| echo: fenced
#| output-location: column
#| code-line-numbers: "|6"
ggplot(data = idaho_county_merged,
       mapping = aes(x = pct_collegeE, 
                     y = median_incomeE))
```




## Coding Out Loud 


Start with the `idaho_county_merged` data frame, map college attainment to the x-axis and map median income to the y-axis. **Represent each observation with a point**


```{r}
#| echo: fenced
#| output-location: column
#| code-line-numbers: "|7"
ggplot(data = idaho_county_merged,
       mapping = aes(x = pct_collegeE, 
                     y = median_incomeE))+
  geom_point()
```



## Coding Out Loud 


Start with the `idaho_county_merged` data frame, map college attainment to the x-axis and map median income to the y-axis. Represent each observation with a point **and map election winner to the color of each point**. 

```{r}
#| echo: fenced
#| output-location: column
#| code-line-numbers: "|8"
ggplot(data = idaho_county_merged,
       mapping = aes(x = pct_collegeE, 
                     y = median_incomeE,
                     color = win_candidate))+
  geom_point()
```


## Coding Out Loud 


Start with the `idaho_county_merged` data frame, map college attainment to the x-axis and map median income to the y-axis. Represent each observation with a point and map election winner to the color of each point. **Title the plot "Education and Median Income".** 

```{r}
#| echo: fenced
#| output-location: column
#| code-line-numbers: |8
ggplot(data = idaho_county_merged, 
       mapping = aes(x = pct_collegeE, y = median_incomeE,
                     color = win_candidate)) +
  geom_point() +
  labs(title = "Education and Median Income")
```


## Coding Out Loud 


Start with the `idaho_county_merged` data frame, map college attainment to the x-axis and map median income to the y-axis. Represent each observation with a point and map election winner to the color of each point. Title the plot "Education and Median Income". **Add the subtitle, "Linear relationship between education and income"**

```{r}
#| echo: fenced
#| output-location: column
#| code-line-numbers: "|9"
ggplot(data = idaho_county_merged, 
       mapping = aes(x = pct_collegeE, y = median_incomeE,
                     color = win_candidate)) +
  geom_point() +
  labs(title = "Education and Median Income",
       subtitle = "Linear relationship between education and income")
```


## Coding Out Loud 


Start with the `idaho_county_merged` data frame, map college attainment to the x-axis and map median income to the y-axis. Represent each observation with a point and map election winner to the color of each point. Title the plot "Education and Median Income". Add the subtitle, "Linear relationship between education and income". **Label the x and y axes "Pct Adults w/ Bachelor's Degree or Higher" and "Median Income", respectively**

```{r}
#| echo: fenced
#| output-location: column
#| code-line-numbers: "|10|11"
ggplot(data = idaho_county_merged, 
       mapping = aes(x = pct_collegeE, y = median_incomeE,
                     color = win_candidate)) +
  geom_point() +
  labs(title = "Education and Median Income",
       subtitle = "Linear relationship between education and income",
       x = "Pct Adults w/ Bachelor's Degree or Higher", 
       y = "Median Income")
```

## Coding Out Loud 

Start with the `idaho_county_merged` data frame, map college attainment to the x-axis and map median income to the y-axis. Represent each observation with a point and map election winner to the color of each point. Title the plot "Education and Median Income". Add the subtitle, "Linear relationship between education and income". Label the x and y axes "Pct Adults w/ Bachelor's Degree or Higher" and "Median Income", respectively, **label the legend "Winning Pres. Candidate (2020)"**


```{r}
#| echo: fenced
#| output-location: column
#| code-line-numbers: "|12"
ggplot(data = idaho_county_merged, 
       mapping = aes(x = pct_collegeE, y = median_incomeE,
                     color = win_candidate)) +
  geom_point() +
  labs(title = "Education and Median Income",
       subtitle = "Linear relationship between education and income",
       x = "Pct Adults w/ Bachelor's Degree or Higher", 
       y = "Median Income",
       color = "Winning Pres. Candidate (2020)")
```


## Coding Out Loud 

Start with the `idaho_county_merged` data frame, map college attainment to the x-axis and map median income to the y-axis. Represent each observation with a point and map election winner to the color of each point. Title the plot "Education and Median Income". Add the subtitle, "Linear relationship between education and income". Label the x and y axes "Pct Adults w/ Bachelor's Degree or Higher" and "Median Income", respectively, label the legend "Winning Pres. Candidate (2020)", **and add a caption for the data source.**

```{r}
#| echo: fenced
#| output-location: column
#| code-line-numbers: "|13"
ggplot(data = idaho_county_merged, 
       mapping = aes(x = pct_collegeE, y = median_incomeE,
                     color = win_candidate)) +
  geom_point() +
  labs(title = "Education and Median Income",
       subtitle = "Linear relationship between education and income",
       x = "Pct Adults w/ Bachelor's Degree or Higher", 
       y = "Median Income",
       color = "Winning Pres. Candidate (2020)",
       caption = "Source:Education and income data from U.S. Census Bureau. \n Voting data from the Harvard Dataverse")
```

## Coding Out Loud 

Start with the `idaho_county_merged` data frame, map college attainment to the x-axis and map median income to the y-axis. Represent each observation with a point and map election winner to the color of each point. Title the plot "Education and Median Income". Add the subtitle, "Linear relationship between education and income". Label the x and y axes "Pct Adults w/ Bachelor's Degree or Higher" and "Median Income", respectively, label the legend "Winning Pres. Candidate (2020)", and add a caption for the data source. **Oh! AND fix the candidate name colors with one more layer of code for `ggplot`**

```{r}
#| echo: fenced
#| output-location: column
#| code-line-numbers: "|14"
ggplot(data = idaho_county_merged, 
       mapping = aes(x = pct_collegeE, y = median_incomeE,
                     color = win_candidate)) +
  geom_point() +
  labs(title = "Education and Median Income",
       subtitle = "Linear relationship between education and income",
       x = "Pct Adults w/ Bachelor's Degree or Higher", 
       y = "Median Income",
       color = "Winning Pres. Candidate (2020)",
       caption = "Source:Education and income data from U.S. Census Bureau. \n Voting data from the Harvard Dataverse") +
 scale_color_manual(values = c("blue","red")) 
```


## Argument names

> You can omit the names of first two arguments when building plots with `ggplot()`. 

:::: {.columns}

::: {.column width="50%"}
```{r idaho-10, fig.show = "hide", warning = FALSE, echo = TRUE}
ggplot(data = idaho_county_merged, 
       mapping = aes(x = pct_collegeE, y = median_incomeE,
                     color = win_candidate)) +
  geom_point() +
  labs(title = "Education and Median Income",
       subtitle = "Linear relationship between education and income",
       x = "Pct Adults w/ Bachelor's Degree or Higher", 
       y = "Median Income",
       color = "Winning Pres. Candidate (2020)",
       caption = "Source:Education and income data from U.S. Census Bureau. \n Voting data from the Harvard Dataverse") +
 scale_color_manual(values = c("blue","red")) 
```
:::


::: {.column width="50%"}
```{r idaho-11, fig.show = "hide", warning = FALSE, echo = TRUE}
ggplot(idaho_county_merged, 
       aes(x = pct_collegeE, y = median_incomeE,
                     color = win_candidate)) +
  geom_point() +
  labs(title = "Education and Median Income",
       subtitle = "Linear relationship between education and income",
       x = "Pct Adults w/ Bachelor's Degree or Higher", 
       y = "Median Income",
       color = "Winning Pres. Candidate (2020)",
       caption = "Source:Education and income data from U.S. Census Bureau. \n Voting data from the Harvard Dataverse") +
 scale_color_manual(values = c("blue","red")) 
```
:::

::::




# Aesthetics


## Aesthetics options

Commonly used characteristics of plotting characters that can be **mapped to a specific variable** in the data are

- `color`
- `shape`
- `size`
- `alpha` (transparency)

## Color
::: {.column width="60%"}

```{r idaho-color, fig.show = "hide", warning = FALSE, echo = TRUE}
#| code-line-numbers: 9
ggplot(data = idaho_county_merged, 
       mapping = aes(x = pct_collegeE, y = median_incomeE,
                     color = win_candidate)) +
  geom_point() +
  labs(title = "Education and Median Income",
       subtitle = "Linear relationship between education and income",
       x = "Pct Adults w/ Bachelor's Degree or Higher", 
       y = "Median Income",
       color = "Winning Pres. Candidate (2020)")
```

:::

::: {.column width="40%"}

```{r ref.label = "idaho-color", echo = FALSE, warning = FALSE, out.width = "100%", fig.width = 8}
```

:::

## Shape
::: {.column width="60%"}

```{r idaho-shape, fig.show = "hide", warning = FALSE, echo = TRUE}
#| code-line-numbers: 3
ggplot(data = idaho_county_merged, 
       mapping = aes(x = pct_collegeE, y = median_incomeE,
                     shape = win_candidate)) +
  geom_point() +
  labs(title = "Education and Median Income",
       subtitle = "Linear relationship between education and income",
       x = "Pct Adults w/ Bachelor's Degree or Higher", 
       y = "Median Income",
       shape = "Winning Pres. Candidate (2020)")
```

:::

::: {.column width="40%"}

```{r ref.label = "idaho-shape", echo = FALSE, warning = FALSE, out.width = "100%", fig.width = 8}
```

:::


## Alpha
::: {.column width="60%"}

```{r idaho-alpha, fig.show = "hide", warning = FALSE, echo = TRUE}
#| code-line-numbers: 5
ggplot(data = idaho_county_merged, 
       mapping = aes(x = pct_collegeE, y = median_incomeE,
                     color = win_candidate,
                     size = total_populationE,
                     alpha = pct_democrat_votes)) +
  geom_point() +
  labs(title = "Education and Median Income",
       subtitle = "Linear relationship between education and income",
       x = "Pct Adults w/ Bachelor's Degree or Higher", 
       y = "Median Income",
       color = "Winning Pres. Candidate (2020)")
```

:::

::: {.column width="40%"}

```{r ref.label = "idaho-alpha", echo = FALSE, warning = FALSE, out.width = "100%", fig.width = 8}
```

:::


## Size
::: {.column width="60%"}

```{r idaho-size, fig.show = "hide", warning = FALSE, echo = TRUE}
#| code-line-numbers: 4
ggplot(data = idaho_county_merged, 
       mapping = aes(x = pct_collegeE, y = median_incomeE,
                     color = win_candidate,
                     size = total_populationM)) +
  geom_point() +
  labs(title = "Education and Median Income",
       subtitle = "Linear relationship between education and income",
       x = "Pct Adults w/ Bachelor's Degree or Higher", 
       y = "Median Income",
       color = "Winning Pres. Candidate (2020)")
```

:::

::: {.column width="40%"}

```{r ref.label = "idaho-size", echo = FALSE, warning = FALSE, out.width = "100%", fig.width = 8}
```

:::

## Extra Stuff: Pulling Census Data with `tidycensus`

```{r}
id_education <- get_acs(
  geography = "county", 
  variables = "DP02_0068P",
  state = "ID", 
  year = 2020,
  geometry = TRUE
)
```




## Extra Stuff: Visualizing Census Data with `tidycensus`
```{r}
ggplot(data = id_education, aes(fill = estimate)) + 
  geom_sf() + 
  scale_fill_distiller(direction = 1) + 
  labs(title = "  Educational Attainment by County",
       caption = "Data source: 2020 5-year ACS, US Census Bureau",
       fill = "ACS estimate") + 
  theme_void()
```



